<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite hostname="NEWNODE64" ignored="2" name="Test" tests="6" failures="1" timestamp="16 Jul 2018 12:55:26 GMT" time="0.078" errors="0">
  <testcase name="@AfterMethod getResult" time="0.015" classname="com.qa.reports.practice.multipleclasses.BaseTest">
    <failure type="java.lang.NullPointerException">
      <![CDATA[java.lang.NullPointerException
at com.qa.reports.practice.GetScreenShot.getScreenshot(GetScreenShot.java:18)
at com.qa.reports.practice.multipleclasses.BaseTest.getResult(BaseTest.java:54)
... Removed 28 stack frames]]>
    </failure>
  </testcase> <!-- @AfterMethod getResult -->
  <testcase name="@AfterMethod getResult" time="0.0" classname="com.qa.reports.practice.multipleclasses.BaseTest">
    <skipped/>
  </testcase> <!-- @AfterMethod getResult -->
  <testcase name="@AfterMethod getResult" time="0.0" classname="com.qa.reports.practice.multipleclasses.BaseTest">
    <skipped/>
  </testcase> <!-- @AfterMethod getResult -->
  <testcase name="@AfterMethod getResult" time="0.0" classname="com.qa.reports.practice.multipleclasses.BaseTest">
    <skipped/>
  </testcase> <!-- @AfterMethod getResult -->
  <testcase name="@AfterMethod getResult" time="0.0" classname="com.qa.reports.practice.multipleclasses.BaseTest">
    <skipped/>
  </testcase> <!-- @AfterMethod getResult -->
  <testcase name="functionality1Test1" time="0.008" classname="com.qa.reports.practice.multipleclasses.Functionality1"/>
  <testcase name="functionality1Test2" time="0.001" classname="com.qa.reports.practice.multipleclasses.Functionality1">
    <failure type="java.lang.AssertionError" message="expected [Dommata] but found [Naveen]">
      <![CDATA[java.lang.AssertionError: expected [Dommata] but found [Naveen]
at com.qa.reports.practice.multipleclasses.Functionality1.functionality1Test2(Functionality1.java:23)
... Removed 31 stack frames]]>
    </failure>
  </testcase> <!-- functionality1Test2 -->
  <testcase name="functionality1Test3" time="0.0" classname="com.qa.reports.practice.multipleclasses.Functionality1">
    <skipped/>
  </testcase> <!-- functionality1Test3 -->
  <testcase name="functionality2Test1" time="0.0" classname="com.qa.reports.practice.multipleclasses.Functionality2">
    <skipped/>
  </testcase> <!-- functionality2Test1 -->
  <testcase name="functionality2Test2" time="0.0" classname="com.qa.reports.practice.multipleclasses.Functionality2">
    <skipped/>
  </testcase> <!-- functionality2Test2 -->
  <testcase name="functionality2Test3" time="0.0" classname="com.qa.reports.practice.multipleclasses.Functionality2">
    <skipped/>
  </testcase> <!-- functionality2Test3 -->
  <testcase name="@AfterSuite tearDown" time="0.0" classname="com.qa.reports.practice.multipleclasses.BaseTest">
    <ignored/>
  </testcase> <!-- @AfterSuite tearDown -->
  <testcase name="@BeforeSuite setUp" time="0.0" classname="com.qa.reports.practice.multipleclasses.BaseTest">
    <ignored/>
  </testcase> <!-- @BeforeSuite setUp -->
</testsuite> <!-- Test -->
